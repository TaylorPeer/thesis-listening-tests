import streamlit as st
from streamlit_javascript import st_javascript


# TODO get URL params (not sure if useful)
# params = st.experimental_get_query_params()
# if "test" in params:
#    st.write(params["test"][0])


def client_ip():
    url = 'https://api.ipify.org?format=json'
    script = (f'await fetch("{url}").then('
              'function(response) {'
              'return response.json();'
              '})')

    try:
        result = st_javascript(script)
        if isinstance(result, dict) and 'ip' in result:
            return result['ip']

    except:
        # TODO unable to get IP address
        pass


# Get user IP
ip_address = client_ip()

st.title('AI-Generated Drum Pattern Evaluation')

st.write("This is a user survey evaluating the quality of drum patterns generated by various artificial intelligence methods.")
st.write("It is being conducted by [Taylor Peer](https://www.linkedin.com/in/taylorpeer/) as part of a Master Thesis in Software Engineering at the TU Wien in Vienna, Austria.")
st.write("To participate in the survey, please fill out the fields below then listen to the audio files at the bottom of the page and rate them according to the listed criteria.")

st.markdown("""---""")

st.header('Basic Information')

# Name (optional)
name = st.text_input('Your Name (optional)', '')

# Age (optional)
age = st.text_input('Age (optional)', '')

# Gender (optional)
gender = st.radio("Gender (optional)",
                  ('Male', 'Female', 'Other/diverse', 'Rather not say'), index=3)

# Music background:
background = st.radio("Musical training (optional)",
                      ('None', 'Hobby musician or producer', 'Professional musician or producer', 'Rather not say'),
                      index=3)

# Email (optional)
st.write("If you'd like to receive the results of this survey once it's completed, please enter your email address.")
email = st.text_input('Email Address (optional)', '')

st.markdown("""---""")

st.header('Evaluation')

# AUDIO
# Genre select: ANY | ROCK | WHATEVER
# Human <-> Generated
# music qualities...
# Submit!

# TODO load available genres from resources folder!
# - onchange listener on genre select -> reload audio!
# - load random audio from selected genre: AI or training
# - show audio player
# - Human <-> AI Generated
# - Rhythmic?
# - Other stuff?
# Submit button -> auto reload + show current "score"

# Thank you! You have rated x drum beats. You correctly identified y% as being human or machine generated.

st.markdown("""---""")

st.write("Name: ", name)
st.write("Age: ", age)
st.write("Gender: ", gender)
st.write("Music Background: ", background)
st.write("Email: ", email)
st.write("IP: ", ip_address)

# ---

import boto3
import json

ACCESS_KEY = 'REMOVED'
SECRET_KEY = 'REMOVED'
aws_client = boto3.client('s3', aws_access_key_id=ACCESS_KEY, aws_secret_access_key=SECRET_KEY)

data_dict = {
    'Name': 'Daikon Retek',
    'Subjects': ['Math', 'Science', 'History']
}

# Convert Dictionary to JSON String
data_string = json.dumps(data_dict, indent=2, default=str)

# Upload JSON String to an S3 Object
client = boto3.client('s3')

aws_client.put_object(
    Bucket='listening-test-results',
    Key='dev/test.json',
    Body=data_string
)

"""
def upload_to_aws(local_file, bucket, s3_file):

    try:
        s3.upload_file(local_file, bucket, s3_file)
        print("Upload Successful")
        return True
    except FileNotFoundError:
        print("The file was not found")
        return False
    except NoCredentialsError:
        print("Credentials not available")
        return False


uploaded = upload_to_aws('local_file', 'bucket_name', 's3_file_name')
"""